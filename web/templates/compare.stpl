<!DOCTYPE html>

<html>
	<head>
		<% include!("./header.stpl"); %>

		<!-- Data tables -->
		<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs5/jq-3.6.0/jszip-2.5.0/dt-1.12.1/b-2.2.3/b-colvis-2.2.3/b-html5-2.2.3/b-print-2.2.3/r-2.3.0/sl-1.4.0/datatables.min.css"/>
		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
		<script type="text/javascript" src="https://cdn.datatables.net/v/bs5/jq-3.6.0/jszip-2.5.0/dt-1.12.1/b-2.2.3/b-colvis-2.2.3/b-html5-2.2.3/b-print-2.2.3/r-2.3.0/sl-1.4.0/datatables.min.js"></script>

		<link rel="stylesheet" href="/static/table.css">
		<script type="module" src="/static/table.js"></script>
		<link rel="stylesheet" href="/static/loading_anim.css">
	</head>
	<body>
	<div class="form-check form-switch">
		<label class="form-check-label" for="lightSwitch"> Dark Mode </label>
		<input class="form-check-input" type="checkbox" id="lightSwitch" />
	</div>

	</br>
	<table id="config_table">
		<tbody>
			<tr>
				<td>Version</td>
				<td><a href="https://github.com/ggwpez/substrate-weight-compare" target="_blank"><%= subweight_core::VERSION.clone() %></a></td>
			</tr>
			<tr>
				<td><%- readme_link("Repository") %></td>
				<td>
					<select id="select_repo">
						<% for repo in self.repos.iter() { %>
							<option value=<%= repo %> <%- if &self.args.repo == repo { "selected" } else { "" } %>><%= repo %></option>
						<% } %>
					</select>
				</td>
			</tr>
			<tr>
				<td>Old Commit/Branch</td>
				<td><input id="input_old" type="text" value="<%= self.args.old %>"></td>
			</tr>
			<tr>
				<td>New Commit/Branch</td>
				<td><input id="input_new" type="text" value="<%= self.args.new %>"></td>
			</tr>
			<tr>
				<td><%- readme_link("Path Pattern") %></td>
				<td><input id="input_path_pattern" type="text" value="<%= self.args.path_pattern %>"></td>
			</tr>
			<tr>
				<td><%- readme_link("Pallet") %></td>
				<td><input id="input_pallet" type="text" value="<%= self.args.pallet.clone().unwrap_or_else(|| ".*".into()) %>"></td>
			</tr>
			<tr>
				<td><%- readme_link("Extrinsic") %></td>
				<td><input id="input_extrinsic" type="text" value="<%= self.args.extrinsic.clone().unwrap_or_else(|| ".*".into()) %>"></td>
			</tr>
			<tr>
				<td><%- readme_link("Rel Threshold") %></td>
				<td>
				<div class="input-group">
					<input id="input_threshold" type="number" class="form-control" value="<%= self.args.threshold %>">
					<div class="input-group-append">
						<span class="input-group-text">%</span>
					</div>
					</div>
				</td>
			</tr>
			<tr>
				<td><%- readme_link("Dimension") %></td>
				<td>
					<select id="select_unit">
						<% for (val, repr) in subweight_core::Dimension::reflect().iter() { %>
							<option value="<%= repr %>" <%- if &self.args.unit == val { "selected" } else { "" } %>><%= repr %></option>
						<% } %>
					</select>
				</td>
			</tr>
			<tr>
				<td><%- readme_link("Evaluation Method") %></td>

				<td>
					<select id="select_method">
						<% for (val, repr) in subweight_core::CompareMethod::reflect().iter() { %>
							<option value="<%= repr %>" <%- if &self.args.method == val { "selected" } else { "" } %>><%= repr %></option>
						<% } %>
					</select>
				</td>
			</tr>
			<tr>
				<td><%- readme_link("Ignore Errors") %></td>
				<td><input id="checkbox_ignore_errors" type="checkbox" <%- if self.args.ignore_errors { "checked" } else { "" } %>></td>
			</tr>
			<tr>
				<td><%- readme_link("Git Pull") %></td>
				<td><input id="checkbox_git_pull" type="checkbox" <%- if self.args.git_pull.unwrap_or(true) { "checked" } else { "" } %>></td>
			</tr>
			<tr>
				<td><%- readme_link("Cache") %> hit</td>
				<td><%= if self.was_cached { "Yes" } else { "No" } %></td>
			</tr>
		</tbody>
	</table>
	</br>

	<% let errors = self.diff.iter().filter_map(|c| c.error()).collect::<Vec<_>>(); if !errors.is_empty() { %>
		<p>
			<button class="btn btn-danger" type="button" data-bs-toggle="collapse" data-bs-target="#collapseErrors" aria-expanded="false" aria-controls="collapseErrors">
				<%- errors.len() %> errors generated
			</button>
		</p>
		<div class="collapse" id="collapseErrors">
			<div class="card card-body text-dark bg-light">
				<% for err in errors { %>
					<%- format!("{}", err) %><br>
				<% } %>
			</div>
		</div>
	<% } %>

	<% let warnings = self.diff.iter().filter_map(|c| c.warning()).collect::<Vec<_>>(); if !warnings.is_empty() { %>
		<p>
			<button class="btn btn-warning" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWarns" aria-expanded="false" aria-controls="collapseWarns">
				<%- warnings.len() %> warnings generated
			</button>
		</p>
		<div class="collapse" id="collapseWarns">
			<div class="card card-body text-dark bg-light">
				<% for err in warnings { %>
					<%- format!("{}", err) %><br>
				<% } %>
			</div>
		</div>
	<% } %>

	<table id="sort_me" class="display table">
	<thead>
		<tr>
			<th>File</th>
			<th>Extrinsic</th>

			<th>Old [<%= format!("{:?}", self.args.unit) %>]</th>
			<th>New [<%= format!("{:?}", self.args.unit) %>]</th>
			<th>Rel. Change</th>
			<th>Abs. Change</th>

			<th>Old Equation</th>
			<th>New Equation</th>
			<th>Used Variables</th>
		</tr>
	</thead>
	<tbody>
		<% for (info, change) in self.diff.iter().filter_map(|c| c.term().map(|t| (c, t))) { %>
			<tr id=<%- format!("\"{}.{}\"", &info.file, &info.name) %>>
				<td>
					<%= info.file %>
				</td>
				<% if info.warning().is_some() { %>
					<td class="text-warning">
				<% } else { %>
						<td>
				<% } %>
					<%= info.name %>
					<sup>
						<a href=<%- format!("\"#{}.{}\"", &info.file, &info.name) %>>ðŸ”—</a>
					</sup>
				</td>

				<td data-order='<%- change.old_v.unwrap_or_default() %>'>
					<%= change.old_v.map(|t| self.args.unit.fmt_value(t)).unwrap_or_else(|| "-".into()) %>
				</td>
				<td data-order='<%- change.new_v.unwrap_or_default() %>'>
					<%= change.new_v.map(|t| self.args.unit.fmt_value(t)).unwrap_or_else(|| "-".into()) %>
				</td>
				<td data-order='<%- order_percent(change) %>'>
					<%- html_color_percent(change.percent, change.change) %>
				</td>
				<td data-order='<%- order_abs(change) %>'>
					<%- html_color_abs(change, self.args.unit) %>
				</td>

				<td>
					<%- change.old.as_ref().map(|t| format!("{} {}", code_link(&self.args.repo, &self.organization, &info.name, &info.file, &self.args.old), t)).unwrap_or_else(|| "-".into()) %>
				</td>
				<td>
					<%- change.new.as_ref().map(|t| format!("{} {}", code_link(&self.args.repo, &self.organization, &info.name, &info.file, &self.args.new), t)).unwrap_or_else(|| "-".into()) %>
				</td>
				<td>
					<%= format!("{}", &change.scope) %>
				</td>
			</tr>
		<% } %>
	</tbody>
	</body>
</html>
